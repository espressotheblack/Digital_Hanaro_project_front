/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/oXyhDarPNbM
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/
'use client';

import { useState } from 'react';
import axios from 'axios';
import Link from "next/link"
import { Input } from "@/components/ui/input"
import { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from "@/components/ui/select"
import { Button } from "@/components/ui/button"
import { ResponsivePie } from "@nivo/pie"
import { ResponsiveBar } from "@nivo/bar"
import { ResponsiveLine } from "@nivo/line"
import { ResponsiveRadar } from '@nivo/radar'

export function Component() {
  const [selectedRegion, setSelectedRegion] = useState('');
  const [ageGroup, setAgeGroup] = useState('');

  const handleRegionChange = (region) => {
    setSelectedRegion(region);
    sendSelectionToBackend(region, ageGroup);
  };

  const handleAgeChange = (event) => {
    const age = event.target.value;
    setAgeGroup(age);
    sendSelectionToBackend(selectedRegion, age);
  };

  const sendSelectionToBackend = async (region, age) => {
    try {
      const response = await axios.post('/api/selection', { region, age });
      console.log('백엔드 응답:', response.data);
    } catch (error) {
      console.error('백엔드로 선택 사항 전송 중 오류 발생:', error);
    }
  };

  const data1 = [
    { category: '평균', value: 20 },
    { category: '나', value: 37 },
    { category: '나', value: 37 }
  ];
  
  const data2 = [
    { category: 'D', value: 60 },
    { category: 'E', value: 40 },
    { category: 'F', value: 80 }
  ];
  
  const data3 = [
    { category: 'G', value: 20 },
    { category: 'H', value: 90 },
    { category: 'I', value: 50 }
  ];
  
  const data4 = [
    { category: 'J', value: 10 },
    { category: 'K', value: 60 },
    { category: 'L', value: 30 }
  ];

  return (
    (<div className="max-w-md mx-auto bg-white p-4">
      <header className="flex items-center justify-between py-2">
        <UndoIcon className="w-6 h-6" />
        <h1 className="text-lg font-semibold">사장님ON</h1>
        <HomeIcon className="w-6 h-6" />
      </header>
      <nav className="flex w-full mb-4 text-sm font-medium border-b">
        <Link href="#" className="p-2" prefetch={false}>
          캘린더
        </Link>
        <Link href="#" className="p-2 border-b-2 border-black" prefetch={false}>
          분석리포트
        </Link>
        <Link href="#" className="p-2" prefetch={false}>
          운영솔루션
        </Link>
        <Link href="#" className="p-2" prefetch={false}>
          사업자대출
        </Link>
        <Link href="#" className="p-2" prefetch={false}>
          새소식
        </Link>
      </nav>
      <section className="py-4">
        <h2 className="text-lg font-semibold">김하나 사장님</h2>
        <p className="text-sm text-muted-foreground">지난 달 경비 지출은 어땠나요?</p>
        <p>
          2024. 06. 01 - 2024. 06. 30 <ChevronDownIcon className="inline w-4 h-4" />
        </p>
      </section>
      <section className="py-4">
        <h2 className="text-lg font-semibold">경비 분석 리포트</h2>
        <p className="text-sm">
          지난달보다 개인 경비 지출이 <span className="text-red-500">999,999원</span> 늘었어요
        </p>
        <p className="text-sm text-red-500">+18% 증가</p>
        <div className="flex justify-around py-4">
          <PieChart className="w-24 h-24" />
          <PieChart className="w-24 h-24" />
        </div>
      </section>
      <section className="py-4">
        <h2 className="text-lg font-semibold">동종업계 비교한 경비 지출을 확인해 보세요!</h2>
        <div className="flex items-center py-2">
          <label htmlFor="input" className="mr-2">업종</label>
          <Input id="input" className="flex-1" />
        </div>
        <div className="grid grid-cols-2 gap-4 py-4">
          <BarChart className="w-full h-24" />
          <BarChart2 className="w-full h-24" />
          <p className="text-sm text-red-500">+18% 증가</p>
          <p className="text-sm text-red-500">+18% 증가</p>
          <BarChart className="w-full h-24" />
          <BarChart className="w-full h-24" />
        </div>
      </section>
      <section className="py-4">
        <h2 className="text-lg font-semibold">손님ON</h2>
        <p className="text-sm">가게 지역과 손님 연령대를 선택하여 해당 지역의 손님 지출 유형을 확인해 보세요!!</p>
        <div className="flex items-center py-2">
          <label htmlFor="region" className="mr-2">
            지역
          </label>
          <Select>
            <SelectTrigger id="region" className="flex-1">
              <SelectValue placeholder="Select region" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="region1">Region 1</SelectItem>
              <SelectItem value="region2">Region 2</SelectItem>
            </SelectContent>
          </Select>
          <label htmlFor="age" className="ml-4 mr-2">
            연령대
          </label>
          <Input id="age" className="flex-1" />
        </div>
        <div>
          <RadarChart className="w-full h-48" />
        </div>
        <div className="py-4">
          <Button className="w-full">페르소나 설명 텍스트</Button>
        </div>
      </section>
    </div>)
  );
}

function BarChart(props) {
  return (
    <div {...props}>
      <ResponsiveBar
        data={[
          { name: "평균", count: 20 },
          { name: "나", count: 37 }
        ]}
        keys={["count"]}
        indexBy="name"
        margin={{ top: 0, right: 0, bottom: 10, left: 40 }}
        padding={0.3}
        colors={["#2563eb"]}
        axisBottom={null} // 축을 숨김
        axisLeft={null} // 축을 숨김
        enableGridY={false} // y 축 그리드도 숨김
        enableLabel={false} // 막대 라벨 활성화
        labelSkipWidth={30} // 라벨 간격 설정
        labelSkipHeight={30} // 라벨 간격 설정
        labelTextColor={{ from: 'color', modifiers: [['darker', 1.6]] }} // 라벨 텍스트 색상 설정
        theme={{
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
          grid: {
            line: {
              stroke: "#f3f4f6",
            },
          },
        }}
        tooltipLabel={({ id, value }) => `${id}: ${value}`} // 툴팁 내용 설정
        legends={[]} // 범례를 모두 제거
        role="application"
        ariaLabel="A bar chart showing data"
      />
      <p className="text-right mt-0.001" style={{ marginRight: -20 }}>고정비.</p>
    </div>
  );
}


function BarChart2(props) {
  return (
    <div {...props}>
      <ResponsiveBar
  data={[
    { name: "평균", count: 50 },
    { name: "나", count: 10 }
  ]}
  keys={["count"]}
  indexBy="name"
  margin={{ top: 0, right: 0, bottom: 40, left: 40 }}
  padding={0.3}
  colors={["#2563eb"]}
  axisBottom={null} // 축을 숨김
  axisLeft={null} // 축을 숨김
  enableGridY={false} // y 축 그리드도 숨김
  enableLabel={false} // 막대 라벨도 숨김
  theme={{
    tooltip: {
      chip: {
        borderRadius: "9999px",
      },
      container: {
        fontSize: "12px",
        textTransform: "capitalize",
        borderRadius: "6px",
      },
    },
    grid: {
      line: {
        stroke: "#f3f4f6",
      },
    },
  }}
  legends={[]} // 범례를 모두 제거
  role="application"
  ariaLabel="A bar chart showing data"
/>

    </div>
  );
}


function ChevronDownIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="m6 9 6 6 6-6" />
    </svg>)
  );
}


function HomeIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z" />
      <polyline points="9 22 9 12 15 12 15 22" />
    </svg>)
  );
}


function LineChart(props) {
  return (
    (<div {...props}>
      <ResponsiveLine
        data={[
          {
            id: "Desktop",
            data: [
              { x: "Jan", y: 43 },
              { x: "Feb", y: 137 },
              { x: "Mar", y: 61 },
              { x: "Apr", y: 145 },
              { x: "May", y: 26 },
              { x: "Jun", y: 154 },
            ],
          },
          {
            id: "Mobile",
            data: [
              { x: "Jan", y: 60 },
              { x: "Feb", y: 48 },
              { x: "Mar", y: 177 },
              { x: "Apr", y: 78 },
              { x: "May", y: 96 },
              { x: "Jun", y: 204 },
            ],
          },
        ]}
        margin={{ top: 10, right: 10, bottom: 40, left: 40 }}
        xScale={{
          type: "point",
        }}
        yScale={{
          type: "linear",
        }}
        axisTop={null}
        axisRight={null}
        axisBottom={{
          tickSize: 0,
          tickPadding: 16,
        }}
        axisLeft={{
          tickSize: 0,
          tickValues: 5,
          tickPadding: 16,
        }}
        colors={["#2563eb", "#e11d48"]}
        pointSize={6}
        useMesh={true}
        gridYValues={6}
        theme={{
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
          grid: {
            line: {
              stroke: "#f3f4f6",
            },
          },
        }}
        role="application" />
    </div>)
  );
}


function PieChart(props) {
  return (
    (<div {...props}>
      <ResponsivePie
        data={[
          { id: "Jan", value: 111 },
          { id: "Feb", value: 157 },
          { id: "Mar", value: 129 },
          { id: "Apr", value: 150 },
          { id: "May", value: 119 },
          { id: "Jun", value: 72 },
        ]}
        sortByValue
        margin={{ top: 10, right: 10, bottom: 40, left: 40 }}
        cornerRadius={0}
        padAngle={0}
        borderWidth={1}
        borderColor={"#ffffff"}
        enableArcLinkLabels={false}
        arcLabel={(d) => `${d.id}`}
        arcLabelsTextColor={"#ffffff"}
        arcLabelsRadiusOffset={0.65}
        colors={["#2563eb"]}
        theme={{
          labels: {
            text: {
              fontSize: "18px",
            },
          },
          tooltip: {
            chip: {
              borderRadius: "9999px",
            },
            container: {
              fontSize: "12px",
              textTransform: "capitalize",
              borderRadius: "6px",
            },
          },
        }}
        role="application" />
    </div>)
  );
}


function UndoIcon(props) {
  return (
    (<svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path d="M3 7v6h6" />
      <path d="M21 17a9 9 0 0 0-9-9 9 9 0 0 0-6 2.3L3 13" />
    </svg>)
  );
}

function RadarChart(props) {
  return (
    (<div {...props}>
      <ResponsiveRadar
        data={[
          {
            "taste": "fruity",
            "chardonay": 93,
            "carmenere": 71,
            "syrah": 37
          },
          {
            "taste": "bitter",
            "chardonay": 77,
            "carmenere": 22,
            "syrah": 87
          },
          {
            "taste": "heavy",
            "chardonay": 72,
            "carmenere": 100,
            "syrah": 86
          },
          {
            "taste": "strong",
            "chardonay": 104,
            "carmenere": 30,
            "syrah": 63
          },
          {
            "taste": "sunny",
            "chardonay": 93,
            "carmenere": 89,
            "syrah": 111
          },
          {
            "taste": "spicy",
            "chardonay": 90,
            "carmenere": 80,
            "syrah": 95
          },
          {
            "taste": "sweet",
            "chardonay": 85,
            "carmenere": 70,
            "syrah": 80
          },
          {
            "taste": "sour",
            "chardonay": 78,
            "carmenere": 65,
            "syrah": 88
          }
        ]}
        keys={['chardonay', 'carmenere', 'syrah']}
        indexBy="taste"
        valueFormat=">-.2f"
        margin={{ top: 50, right: 0, bottom: 20, left: 20 }}
        borderColor={{ from: 'color' }}
        gridLabelOffset={10}
        dotSize={10}
        dotColor={{ theme: 'background' }}
        dotBorderWidth={2}
        colors={{ scheme: 'nivo' }}
        blendMode="multiply"
        motionConfig="wobbly"
        legends={[
            {
                anchor: 'top-left',
                direction: 'column',
                translateX: 0,
                translateY: 0,
                itemWidth: 80,
                itemHeight: 20,
                itemTextColor: '#999',
                symbolSize: 12,
                symbolShape: 'circle',
                effects: [
                    {
                        on: 'hover',
                        style: {
                            itemTextColor: '#000'
                        }
                    }
                ]
            }
        ]}
        role="application" />
    </div>)
  );
}

